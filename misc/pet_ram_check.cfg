SYMBOLS {
	__LOADADDR__: type = import;
}
MEMORY {
	ZP:		    file = "", start = $0002,  size = $001A,		define = yes;
	LOADADDR:	file = %O, start = $F000 - 2, size = $0002;
	RAM:		file = %O, start = %S,	 size = $8000 - %S;
    ROM:        file = %O, start = $F000, size = $1000;
}
SEGMENTS {
	LOADADDR: load = LOADADDR, type = ro;
	ZEROPAGE: load = ZP,	   type = zp,  optional = yes;

	EXEHDR:   load = ROM,	   type = ro,  optional = yes;
	RODATA:   load = ROM,	   type = ro,  optional = yes;
	DATA:	  load = ROM,	   type = rw,  optional = yes;
	BSS:	  load = ROM,	   type = bss, optional = yes;
    CODE:     load = ROM,      type = ro;

	ROM_VECTOR:	  load = ROM,  type = rw,  start = $fffa, optional = yes, define = yes;

}
